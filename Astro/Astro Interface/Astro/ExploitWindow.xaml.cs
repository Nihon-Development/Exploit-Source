using Microsoft.Win32;
using System;
using System.IO;
using System.Management;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Input;
using System.Windows.Threading;
using System.Net;
using System.Diagnostics;

namespace Astro
{
    public partial class ExploitWindow : Window
    {
        private DiscordRpc.EventHandlers handlers;
        private DiscordRpc.RichPresence presence;
        public static string Version = "2.1.7e";
        public ExploitWindow()
        {
            InitializeComponent();
            CheckForUpdate();

            if (!IsWin10())
            {
                MessageBox.Show("Astro Does Not Have Support For Versions Under Windows 10 Please Upgrade And Try Again", "Error: Version Not Supported", MessageBoxButton.OK, MessageBoxImage.Error);
                Close();
            }
        }
        private async void CheckForUpdate()
        {
            using (WebClient WebClient = new WebClient())
            {
                if (Version.Equals(WebClient.DownloadString("https://pastebin.com/raw/5HVetHqz"), StringComparison.InvariantCultureIgnoreCase))
                {
                    return;
                }
                else
                {
                   if (MessageBox.Show("Astro Requires A Update To Continue Would You Like To Download The Update", "Error: Update Required", MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
                    {
                        await Task.Delay(1500);
                        Process.Start("https://cdn.discordapp.com/attachments/704068405019541565/743881590400221184/Astro_Bootstrapper.exe");
                        Close();
                    }
                   else
                    {
                        Close();
                    }
                }
            }
        }
        static bool IsWin10()
        {
            var Reg = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Windows NT\CurrentVersion");
            string ProductName = (string)Reg.GetValue("ProductName");
            return ProductName.StartsWith("Windows 10");
        }

        private void CloseButton_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Shutdown();
            File.WriteAllText(@"Bin/Settings/TopMost.dll", "TopMost=0");
            File.WriteAllText(@"Bin/Settings/AutoInject.dll", "AutoInject=0");
        }

        private void MiniButton_Click(object sender, RoutedEventArgs e)
        {
            WindowState = WindowState.Minimized;
        }

        private void WelcomePage_Click(object sender, RoutedEventArgs e)
        {
            PageContainer.Content = new WelcomePage();
        }

        private void SettingsPage_Click(object sender, RoutedEventArgs e)
        {
            PageContainer.Content = new SettingsPage();
        }

        private void ExecutorPage_Click(object sender, RoutedEventArgs e)
        {
            PageContainer.Content = new ExecutorPage();
        }

        private void Timer1_Tick(object sender, EventArgs e)
        {
            if (File.ReadAllText(@"Bin/Settings/TopMost.dll").Equals("TopMost=1"))
            {
                Topmost = true;
            }
            else
            {
                Topmost = false;
            }
        }
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            DispatcherTimer Timer1 = new DispatcherTimer();
            Timer1.Tick += new EventHandler(Timer1_Tick);
            Timer1.Interval = new TimeSpan(0, 0, 1);
            Timer1.Start();

            this.handlers = default(DiscordRpc.EventHandlers);
            DiscordRpc.Initialize("743642166256992277", ref this.handlers, true, null);
            this.handlers = default(DiscordRpc.EventHandlers);
            DiscordRpc.Initialize("743642166256992277", ref this.handlers, true, null);
            this.presence.details = "Exploiting With Astro";
            this.presence.state = "Level 6 Executor";
            this.presence.largeImageKey = "largeimage";
            this.presence.smallImageKey = "smallimage";
            this.presence.largeImageText = "Astro";
            this.presence.smallImageText = "ImmuneLion318";
            DiscordRpc.UpdatePresence(ref this.presence);

            PageContainer.Content = new WelcomePage();
        }

        private void Window_MouseDown(object sender, MouseButtonEventArgs e)
        {
            if (e.ChangedButton == MouseButton.Left)
                this.DragMove();
        }

        private void ScriptHubPage_Click(object sender, RoutedEventArgs e)
        {
            PageContainer.Content = new ScriptHubPage();
        }
    }
}
